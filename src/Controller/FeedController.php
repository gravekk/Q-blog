<?php
/**
 * Created by PhpStorm.
 * User: maciekgrabowski
 * Date: 2019-03-23
 * Time: 08:07
 */

namespace App\Controller;


use App\Entity\Feed;
use App\Entity\User;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\File\UploadedFile;


class FeedController extends AbstractController
{
    /**
     * @Route("/feed", name="feed")
     */
    public function index()
    {
        return $this->render("index.html.twig",[
            'title'=>'Feed site',
        ]);
    }

    /**
     * @Route("/onefeed/", name="red onefeed")
     */
    public function redOneFeed()
    {
        return $this->redirectToRoute('popular feed');
    }
    /**
     * @Route("/onefeed/{id}", name="onefeed")
     */
    public function OneFeed($id)
    {
        return $this->render("index.html.twig",[
            'title'=>$id,
        ]);
    }
    /**
     * @Route("/feed/popular", name="popular feed")
     */
    public function popular()
    {

        for ($i = 1; $i < 4; $i++) {

        $feed[$i] = $this->getDoctrine()
            ->getRepository(Feed::class)
            ->find($i);

    }

        return $this->render("feed/feed_show.html.twig",[
            "title"=>"Popular feed",
            'feeds'=>$feed,

        ]);
    }
    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    /**
     * @Route("/feed/new", name="new feed")
     */
    public function new(Request $request)
    {
        $this->denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY');

        $feed = new Feed();
        $form = $this->createFormBuilder($feed)
            ->add('name',TextType::class)
            ->add('text', TextType::class)
            ->add('photo', FileType::class)
            ->getForm();

        $form->handleRequest($request);

        if($form->isSubmitted() && $form->isValid())
        {
            $file = $form->get('photo')->getData();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            try{
                $file->move(
                    $this->getParameter('kernel.root_dir').'/../public/uploads/img',$fileName


                );
                $data = new \DateTime('@'.strtotime('now'));
                $feed->setDate($data);
                $feed->setPhoto($fileName);
                $feed->setAuthorId($this->getUser()->getId());
                $feed->setAuthorName($this->getUser()->getFirstName());
                $entityManager = $this->getDoctrine()->getManager();
                $entityManager->persist($feed);
                $entityManager->flush();

            } catch (FileException $e)
            {

            }

            $feed->setPhoto($fileName);
            return $this->redirectToRoute('popular feed');
        }

        return $this->render("feed/feed.html.twig",[
            "FeedForm"=> $form->createView(),
            "title"=>"New feed",
        ]);
    }


}